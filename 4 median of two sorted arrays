class Solution {
	
	public:
	
    double findMedianSortedArrays(vector<int>& nums1, vector<int>& nums2) {
        auto m=nums1.size();
        auto n=nums2.size();
        unsigned int med;
        if ((m+n)%2==0){
        	double first=findElem(nums1,nums2,(m+n)/2);
        	double second=findElem(nums1,nums2,(m+n)/2+1);
        	return (first+second)/2;
        }
        else{
        	return findElem(nums1,nums2,(m+n)/2+1);
        }
    }


    int findElem(vector<int> & nums1,vector<int> & nums2, int pos){
    	vector<int>::iterator p1=nums1.begin();
    	vector<int>::iterator p2=nums2.begin();
    	int count=0;
    	int elem;
    	while(count < pos){
    		if(p1==nums1.end()){
    			elem=*p2;
    			p2++;

    		}
    		else if(p2==nums2.end()){
    			elem=*p1;
    			p1++;
    			

    		}
    		else{
    			auto & p=((*p1)<(*p2)?p1:p2);
    			elem=*p;
    			p++;

    		}
    		count++;
    	}

    	return elem;

    }
};
